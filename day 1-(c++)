Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

Input Format
------------
202110

Constraints
-----------
n == nums.length 1 <= n <= 300 nums[i] is 0, 1, or 2.

Output Format
-------------
001122





PROGRAM
-------


#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    string s;
    int c=0,m=0,b=0,k=0,i;
    cin>>s;
    c=s.length();
    for(i=0;i<c;i++)
    {
        if(s[i]=='0')
            k++;
        else if(s[i]=='1')
            b++;
        else
            m++;
    }
    for(i=0;i<k;i++) cout<<'0';
    for(i=0;i<b;i++) cout<<'1';
    for(i=0;i<m;i++) cout<<'2';    
    return 0;
}
